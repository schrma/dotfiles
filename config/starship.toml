format = """
$time\
[](fg:white bg:black)\
$username\
$hostname\
[ ](fg:black bg:blue)\
$directory\
[](fg:blue bg:black)\
[ ](fg:black bg:green)\
$python
$git_branch\
$git_status\
$elixir\
$elm\
$golang\
$gradle\
$haskell\
$java\
$julia\
$nodejs\
$nim\
$rust\
$scala\
$docker_context\
$cmd_duration\
$line_break\
$character
"""

[time]
disabled = false
style='black bg:white'
format = '🕙[ $time ]($style)'
time_format = '%T'

[username]
style_user = "green bold"
style_root = "red bold"
format = " [$user@]($style)"
disabled = false
show_always = true

[hostname]
ssh_only = false
format = '[$hostname](bold green) '
trim_at = "."
disabled = false

[character]                            # The name of the module we are configuring is "character"
success_symbol = "[](bold blue)"     # The "success_symbol" segment is being set to "➜" with the color "bold green"
error_symbol = "[✗](bold red)"

# configure directory
[directory]
read_only = " 󰌾(red)"
truncation_length = 15
#truncate_to_repo = true # truncates directory to root folder if in github repo
style = "bold bg:blue fg:white"
format = '[ $path ]($style)'

[cmd_duration]
min_time = 10
show_milliseconds = false
disabled = false
style = "bold italic red"

[aws]
symbol = "  "

[conda]
symbol = " "

[dart]
symbol = " "

[docker_context]
symbol = " "
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

[elixir]
symbol = " "

[elm]
symbol = " "

[git_branch]
symbol = " "
style = 'bold white bg:green'
format = '[$symbol$branch(:$remote_branch) ]($style) '

[git_status]
style='white'
format = '([\[$all_status$ahead_behind\]]($style) )'
stashed = "[${count}*](green)" 
modified = "[${count}+](yellow)" 
deleted =  "[${count}-](red)" 
conflicted =  "[${count}~](red)" 
ahead = "⇡${count}"
behind = "⇣${count}"
untracked = "[${count}?](blue)" 
staged = "[${count}+](green)" 

[git_state]
style =	"bold red"
format = "[$state( $progress_current/$progress_total) ]($style)"
rebase = "rebase"
merge = "merge"	
revert = "revert"	
cherry_pick = "cherry"
bisect = "bisect"	
am = "am"	
am_or_rebase = "am/rebase"


[golang]
symbol = " "

[hg_branch]
symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[haskell]
symbol = "λ "

[memory_usage]
symbol = "󰍛 "

[nim]
symbol = " "

[nix_shell]
symbol = " "

[package]
symbol = "󰏖 "

[perl]
symbol = " "

[php]
symbol = " "

[python]
symbol = ""
#pyenv_version_name = true
format = 'via [${symbol}(${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"
disabled = false

[ruby]
symbol = " "

[rust]
symbol = " "

[scala]
symbol = " "

[shlvl]
symbol = " "

[swift]
symbol = "ﯣ "

[nodejs]
format = "via [ Node.js $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]

